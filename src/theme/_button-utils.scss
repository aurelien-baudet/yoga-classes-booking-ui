@import "icons-utils";


@mixin secondary-button() {
  --border-radius: #{value($buttons, "secondary.border-radius")};
  font-size: value($buttons, "secondary.font-size");
}

@mixin discreet-button($color: var(--ion-color-primary), 
                       $color-activated: $color,
                       $color-focused: $color,
                       $color-hover: $color) {
  @include button-color($color, $color-activated, $color-focused, $color-hover);
  @include button-background(transparent);
}

@mixin button-color($color: var(--ion-color-primary), 
                    $color-activated: $color,
                    $color-focused: $color,
                    $color-hover: $color) {
  --color: #{$color};
  --color-activated: #{$color-activated};
  --color-focused: #{$color-focused};
  --color-hover: #{$color-hover};
}

@mixin button-background($color: transparent, 
                         $color-activated: $color,
                         $color-focused: $color,
                         $color-hover: $color) {
  --background: transparent;
  --background-activated: transparent;
  --background-focused: transparent;
  --background-hover: transparent;
}

@mixin round-icon-button($root-styles) {
  @if (value($root-styles, "icon.border-radius") != null) {
    border-radius: value($root-styles, "icon.border-radius");
  } @else {
    border-radius: #{max(value($root-styles, "icon.width"), value($root-styles, "icon.height")) / 2 + 1px};
  }
  width: value($root-styles, "icon.width");
  height: value($root-styles, "icon.height");
  overflow: hidden;
  @include discreet-button(transparent);
  --padding-start: 0;
  --padding-end: 0;
  @if (value($root-styles, "icon.color") != null) {
    --color: #{value($root-styles, "icon.color")};
  }

  ion-icon {
    @include icon-styles(value($root-styles, "icon"));
  }
}

